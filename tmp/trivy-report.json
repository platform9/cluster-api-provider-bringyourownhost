{
  "SchemaVersion": 2,
  "CreatedAt": "2025-07-07T12:48:19.023060332Z",
  "ArtifactName": ".",
  "ArtifactType": "filesystem",
  "Metadata": {
    "ImageConfig": {
      "architecture": "",
      "created": "0001-01-01T00:00:00Z",
      "os": "",
      "rootfs": {
        "type": "",
        "diff_ids": null
      },
      "config": {}
    }
  },
  "Results": [
    {
      "Target": "cmd/go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2025-22870",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "68acfa91ef0b8bd7"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.36.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2025-22870",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/proxy: golang.org/x/net/http/httpproxy: HTTP Proxy bypass using IPv6 Zone IDs in golang.org/x/net",
          "Description": "Matching of hosts against proxy patterns can improperly treat an IPv6 zone ID as a hostname component. For example, when the NO_PROXY environment variable is set to \"*.example.com\", a request to \"[::1%25.example.com]:80` will incorrectly match and not be proxied.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-115"
          ],
          "VendorSeverity": {
            "amazon": 2,
            "azure": 2,
            "cbl-mariner": 2,
            "ghsa": 2,
            "redhat": 2,
            "ubuntu": 2
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L",
              "V3Score": 4.4
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L",
              "V3Score": 4.4
            }
          },
          "References": [
            "http://www.openwall.com/lists/oss-security/2025/03/07/2",
            "https://access.redhat.com/security/cve/CVE-2025-22870",
            "https://github.com/golang/go/issues/71984",
            "https://go-review.googlesource.com/q/project:net",
            "https://go.dev/cl/654697",
            "https://go.dev/issue/71984",
            "https://groups.google.com/g/golang-announce/c/4t3lzH3I0eI/m/b42ImqrBAQAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2025-22870",
            "https://pkg.go.dev/vuln/GO-2025-3503",
            "https://security.netapp.com/advisory/ntap-20250509-0007",
            "https://security.netapp.com/advisory/ntap-20250509-0007/",
            "https://ubuntu.com/security/notices/USN-7574-1",
            "https://www.cve.org/CVERecord?id=CVE-2025-22870"
          ],
          "PublishedDate": "2025-03-12T19:15:38.31Z",
          "LastModifiedDate": "2025-05-09T20:15:38.727Z"
        },
        {
          "VulnerabilityID": "CVE-2025-22872",
          "PkgID": "golang.org/x/net@v0.30.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.30.0",
            "UID": "68acfa91ef0b8bd7"
          },
          "InstalledVersion": "v0.30.0",
          "FixedVersion": "0.38.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2025-22872",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Incorrect Neutralization of Input During Web Page Generation in x/net in golang.org/x/net",
          "Description": "The tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. \u003cmath\u003e, \u003csvg\u003e, etc contexts).",
          "Severity": "MEDIUM",
          "VendorSeverity": {
            "amazon": 3,
            "azure": 2,
            "cbl-mariner": 2,
            "ghsa": 2,
            "redhat": 2
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:L/I:L/A:L",
              "V3Score": 6.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2025-22872",
            "https://github.com/advisories/GHSA-vvgc-356p-c3xw",
            "https://go.dev/cl/662715",
            "https://go.dev/issue/73070",
            "https://groups.google.com/g/golang-announce/c/ezSKR9vqbqA",
            "https://nvd.nist.gov/vuln/detail/CVE-2025-22872",
            "https://pkg.go.dev/vuln/GO-2025-3595",
            "https://security.netapp.com/advisory/ntap-20250516-0007",
            "https://security.netapp.com/advisory/ntap-20250516-0007/",
            "https://www.cve.org/CVERecord?id=CVE-2025-22872"
          ],
          "PublishedDate": "2025-04-16T18:16:04.183Z",
          "LastModifiedDate": "2025-05-16T23:15:19.707Z"
        }
      ]
    },
    {
      "Target": "go.mod",
      "Class": "lang-pkgs",
      "Type": "gomod",
      "Vulnerabilities": [
        {
          "VulnerabilityID": "CVE-2024-40635",
          "PkgID": "github.com/containerd/containerd@v1.6.18",
          "PkgName": "github.com/containerd/containerd",
          "PkgIdentifier": {
            "PURL": "pkg:golang/github.com/containerd/containerd@v1.6.18",
            "UID": "1ce0c52d3c48d25a"
          },
          "InstalledVersion": "v1.6.18",
          "FixedVersion": "1.7.27, 1.6.38",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-40635",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "containerd: containerd has an integer overflow in User ID handling",
          "Description": "containerd is an open-source container runtime. A bug was found in containerd prior to versions 1.6.38, 1.7.27, and 2.0.4 where containers launched with a User set as a `UID:GID` larger than the maximum 32-bit signed integer can cause an overflow condition where the container ultimately runs as root (UID 0). This could cause unexpected behavior for environments that require containers to run as a non-root user. This bug has been fixed in containerd 1.6.38, 1.7.27, and 2.04. As a workaround, ensure that only trusted images are used and that only trusted users have permissions to import images.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-190"
          ],
          "VendorSeverity": {
            "amazon": 2,
            "azure": 2,
            "cbl-mariner": 2,
            "ghsa": 2,
            "redhat": 2,
            "ubuntu": 2
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:C/C:L/I:L/A:N",
              "V3Score": 4.6
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:H/UI:N/S:C/C:L/I:L/A:N",
              "V3Score": 4.6
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-40635",
            "https://github.com/containerd/containerd",
            "https://github.com/containerd/containerd/commit/05044ec0a9a75232cad458027ca83437aae3f4da",
            "https://github.com/containerd/containerd/commit/11504c3fc5f45634f2d93d57743a998194430b82 (v1.7.27)",
            "https://github.com/containerd/containerd/commit/1a43cb6a1035441f9aca8f5666a9b3ef9e70ab20",
            "https://github.com/containerd/containerd/commit/9639b9625554183d0c4d8d072dccb84fedd2320f (v1.6.38)",
            "https://github.com/containerd/containerd/commit/cf158e884cfe4812a6c371b59e4ea9bc4c46e51a",
            "https://github.com/containerd/containerd/security/advisories/GHSA-265r-hfxg-fhmg",
            "https://lists.debian.org/debian-lts-announce/2025/05/msg00005.html",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-40635",
            "https://ubuntu.com/security/notices/USN-7374-1",
            "https://www.cve.org/CVERecord?id=CVE-2024-40635"
          ],
          "PublishedDate": "2025-03-17T22:15:13.15Z",
          "LastModifiedDate": "2025-05-04T22:15:31.84Z"
        },
        {
          "VulnerabilityID": "GHSA-7ww5-4wqc-m92c",
          "PkgID": "github.com/containerd/containerd@v1.6.18",
          "PkgName": "github.com/containerd/containerd",
          "PkgIdentifier": {
            "PURL": "pkg:golang/github.com/containerd/containerd@v1.6.18",
            "UID": "1ce0c52d3c48d25a"
          },
          "InstalledVersion": "v1.6.18",
          "FixedVersion": "1.6.26, 1.7.11",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://github.com/advisories/GHSA-7ww5-4wqc-m92c",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "containerd allows RAPL to be accessible to a container",
          "Description": "# /sys/devices/virtual/powercap accessible by default to containers\n\nIntel's RAPL (Running Average Power Limit) feature, introduced by the Sandy Bridge microarchitecture, provides software insights into hardware energy consumption. To facilitate this, Intel introduced the powercap framework in Linux kernel 3.13, which reads values via relevant MSRs (model specific registers) and provides unprivileged userspace access via `sysfs`. As RAPL is an interface to access a hardware feature, it is only available when running on bare metal with the module compiled into the kernel.\n\nBy 2019, it was realized that in some cases unprivileged access to RAPL readings could be exploited as a power-based side-channel against security features including AES-NI (potentially inside a SGX enclave) and KASLR (kernel address space layout randomization). Also known as the [PLATYPUS attack](https://platypusattack.com/), Intel assigned [CVE-2020-8694](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694) and [CVE-2020-8695](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695), and AMD assigned [CVE-2020-12912](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912).\n\nSeveral mitigations were applied; Intel reduced the sampling resolution via a microcode update, and the Linux kernel [prevents access by non-root users](https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71) since 5.10. However, this kernel-based mitigation does not apply to many container-based scenarios:\n* Unless using user namespaces, root inside a container has the same level of privilege as root outside the container, but with a slightly more narrow view of the system\n* `sysfs` is mounted inside containers read-only; however only read access is needed to carry out this attack on an unpatched CPU\n\nWhile this is not a direct vulnerability in container runtimes, defense in depth and safe defaults are valuable and preferred, especially as this poses a risk to multi-tenant container environments. This is provided by masking `/sys/devices/virtual/powercap` in the default mount configuration, and adding an additional set of rules to deny it in the default AppArmor profile.\n\nWhile `sysfs` is not the only way to read from the RAPL subsystem, other ways of accessing it require additional capabilities such as `CAP_SYS_RAWIO` which is not available to containers by default, or `perf` paranoia level less than 1, which is a non-default kernel tunable.\n\n## References\n\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8694\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-8695\n* https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-12912\n* https://platypusattack.com/\n* https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/commit/?id=949dd0104c496fa7c14991a23c03c62e44637e71\n* https://web.eece.maine.edu/~vweaver/projects/rapl/",
          "Severity": "MEDIUM",
          "VendorSeverity": {
            "ghsa": 2
          },
          "References": [
            "https://github.com/containerd/containerd",
            "https://github.com/containerd/containerd/commit/67d356cb3095f3e8f8ad7d36f9a733fea1e7e28c",
            "https://github.com/containerd/containerd/commit/746b910f05855c8bfdb4415a1c0f958b234910e5",
            "https://github.com/containerd/containerd/security/advisories/GHSA-7ww5-4wqc-m92c"
          ],
          "PublishedDate": "2023-12-19T21:17:06Z",
          "LastModifiedDate": "2023-12-19T21:17:06Z"
        },
        {
          "VulnerabilityID": "CVE-2024-41110",
          "PkgID": "github.com/docker/docker@v24.0.7+incompatible",
          "PkgName": "github.com/docker/docker",
          "PkgIdentifier": {
            "PURL": "pkg:golang/github.com/docker/docker@v24.0.7%2Bincompatible",
            "UID": "179e3092bf0fc654"
          },
          "InstalledVersion": "v24.0.7+incompatible",
          "FixedVersion": "23.0.15, 26.1.5, 27.1.1, 25.0.6",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-41110",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "moby: Authz zero length regression",
          "Description": "Moby is an open-source project created by Docker for software containerization. A security vulnerability has been detected in certain versions of Docker Engine, which could allow an attacker to bypass authorization plugins (AuthZ) under specific circumstances. The base likelihood of this being exploited is low.\n\nUsing a specially-crafted API request, an Engine API client could make the daemon forward the request or response to an authorization plugin without the body. In certain circumstances, the authorization plugin may allow a request which it would have otherwise denied if the body had been forwarded to it.\n\nA security issue was discovered In 2018, where an attacker could bypass AuthZ plugins using a specially crafted API request. This could lead to unauthorized actions, including privilege escalation. Although this issue was fixed in Docker Engine v18.09.1 in January 2019, the fix was not carried forward to later major versions, resulting in a regression. Anyone who depends on authorization plugins that introspect the request and/or response body to make access control decisions is potentially impacted.\n\nDocker EE v19.03.x and all versions of Mirantis Container Runtime are not vulnerable.\n\ndocker-ce v27.1.1 containes patches to fix the vulnerability. Patches have also been merged into the master, 19.03, 20.0, 23.0, 24.0, 25.0, 26.0, and 26.1 release branches. If one is unable to upgrade immediately, avoid using AuthZ plugins and/or restrict access to the Docker API to trusted parties, following the principle of least privilege.",
          "Severity": "CRITICAL",
          "CweIDs": [
            "CWE-187",
            "CWE-444",
            "CWE-863"
          ],
          "VendorSeverity": {
            "amazon": 3,
            "azure": 4,
            "cbl-mariner": 4,
            "ghsa": 4,
            "redhat": 4,
            "ubuntu": 3
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H",
              "V3Score": 10
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H",
              "V3Score": 9.9
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-41110",
            "https://github.com/moby/moby",
            "https://github.com/moby/moby/commit/411e817ddf710ff8e08fa193da80cb78af708191",
            "https://github.com/moby/moby/commit/42f40b1d6dd7562342f832b9cd2adf9e668eeb76",
            "https://github.com/moby/moby/commit/65cc597cea28cdc25bea3b8a86384b4251872919",
            "https://github.com/moby/moby/commit/852759a7df454cbf88db4e954c919becd48faa9b",
            "https://github.com/moby/moby/commit/a31260625655cff9ae226b51757915e275e304b0",
            "https://github.com/moby/moby/commit/a79fabbfe84117696a19671f4aa88b82d0f64fc1",
            "https://github.com/moby/moby/commit/ae160b4edddb72ef4bd71f66b975a1a1cc434f00",
            "https://github.com/moby/moby/commit/ae2b3666c517c96cbc2adf1af5591a6b00d4ec0f",
            "https://github.com/moby/moby/commit/cc13f952511154a2866bddbb7dddebfe9e83b801",
            "https://github.com/moby/moby/commit/fc274cd2ff4cf3b48c91697fb327dd1fb95588fb",
            "https://github.com/moby/moby/security/advisories/GHSA-v23v-6jw2-98fq",
            "https://lists.debian.org/debian-lts-announce/2024/10/msg00009.html",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-41110",
            "https://security.netapp.com/advisory/ntap-20240802-0001/",
            "https://ubuntu.com/security/notices/USN-7161-1",
            "https://ubuntu.com/security/notices/USN-7161-2",
            "https://ubuntu.com/security/notices/USN-7161-3",
            "https://www.cve.org/CVERecord?id=CVE-2024-41110",
            "https://www.docker.com/blog/docker-security-advisory-docker-engine-authz-plugin",
            "https://www.docker.com/blog/docker-security-advisory-docker-engine-authz-plugin/"
          ],
          "PublishedDate": "2024-07-24T17:15:11.053Z",
          "LastModifiedDate": "2024-11-21T09:32:15.16Z"
        },
        {
          "VulnerabilityID": "CVE-2024-24557",
          "PkgID": "github.com/docker/docker@v24.0.7+incompatible",
          "PkgName": "github.com/docker/docker",
          "PkgIdentifier": {
            "PURL": "pkg:golang/github.com/docker/docker@v24.0.7%2Bincompatible",
            "UID": "179e3092bf0fc654"
          },
          "InstalledVersion": "v24.0.7+incompatible",
          "FixedVersion": "24.0.9, 25.0.2",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-24557",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "moby: classic builder cache poisoning",
          "Description": "Moby is an open-source project created by Docker to enable software containerization. The classic builder cache system is prone to cache poisoning if the image is built FROM scratch. Also, changes to some instructions (most important being HEALTHCHECK and ONBUILD) would not cause a cache miss. An attacker with the knowledge of the Dockerfile someone is using could poison their cache by making them pull a specially crafted image that would be considered as a valid cache candidate for some build steps. 23.0+ users are only affected if they explicitly opted out of Buildkit (DOCKER_BUILDKIT=0 environment variable) or are using the /build API endpoint. All users on versions older than 23.0 could be impacted. Image build API endpoint (/build) and ImageBuild function from github.com/docker/docker/client is also affected as it the uses classic builder by default. Patches are included in 24.0.9 and 25.0.2 releases.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-345",
            "CWE-346"
          ],
          "VendorSeverity": {
            "amazon": 3,
            "azure": 3,
            "cbl-mariner": 3,
            "ghsa": 2,
            "nvd": 3,
            "photon": 3,
            "redhat": 2,
            "ubuntu": 2
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:L/I:H/A:L",
              "V3Score": 6.9
            },
            "nvd": {
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:U/C:H/I:H/A:H",
              "V3Score": 7.8
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:L/AC:H/PR:N/UI:R/S:C/C:L/I:H/A:L",
              "V3Score": 6.9
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2024-24557",
            "https://github.com/moby/moby",
            "https://github.com/moby/moby/commit/3e230cfdcc989dc524882f6579f9e0dac77400ae",
            "https://github.com/moby/moby/commit/fca702de7f71362c8d103073c7e4a1d0a467fadd",
            "https://github.com/moby/moby/commit/fce6e0ca9bc000888de3daa157af14fa41fcd0ff",
            "https://github.com/moby/moby/security/advisories/GHSA-xw73-rw38-6vjc",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-24557",
            "https://www.cve.org/CVERecord?id=CVE-2024-24557"
          ],
          "PublishedDate": "2024-02-01T17:15:10.953Z",
          "LastModifiedDate": "2024-11-21T08:59:24.603Z"
        },
        {
          "VulnerabilityID": "CVE-2024-45310",
          "PkgID": "github.com/opencontainers/runc@v1.1.12",
          "PkgName": "github.com/opencontainers/runc",
          "PkgIdentifier": {
            "PURL": "pkg:golang/github.com/opencontainers/runc@v1.1.12",
            "UID": "8f7841a46a20e753"
          },
          "InstalledVersion": "v1.1.12",
          "FixedVersion": "1.1.14, 1.2.0-rc.3",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45310",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "runc: runc can be tricked into creating empty files/directories on host",
          "Description": "runc is a CLI tool for spawning and running containers according to the OCI specification. runc 1.1.13 and earlier, as well as 1.2.0-rc2 and earlier, can be tricked into creating empty files or directories in arbitrary locations in the host filesystem by sharing a volume between two containers and exploiting a race with `os.MkdirAll`. While this could be used to create empty files, existing files would not be truncated. An attacker must have the ability to start containers using some kind of custom volume configuration. Containers using user namespaces are still affected, but the scope of places an attacker can create inodes can be significantly reduced. Sufficiently strict LSM policies (SELinux/Apparmor) can also in principle block this attack -- we suspect the industry standard SELinux policy may restrict this attack's scope but the exact scope of protection hasn't been analysed. This is exploitable using runc directly as well as through Docker and Kubernetes. The issue is fixed in runc v1.1.14 and v1.2.0-rc3.\n\nSome workarounds are available. Using user namespaces restricts this attack fairly significantly such that the attacker can only create inodes in directories that the remapped root user/group has write access to. Unless the root user is remapped to an actual\nuser on the host (such as with rootless containers that don't use `/etc/sub[ug]id`), this in practice means that an attacker would only be able to create inodes in world-writable directories. A strict enough SELinux or AppArmor policy could in principle also restrict the scope if a specific label is applied to the runc runtime, though neither the extent to which the standard existing policies block this attack nor what exact policies are needed to sufficiently restrict this attack have been thoroughly tested.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-61",
            "CWE-363"
          ],
          "VendorSeverity": {
            "amazon": 1,
            "azure": 1,
            "cbl-mariner": 1,
            "ghsa": 2,
            "photon": 1,
            "redhat": 1,
            "ubuntu": 1
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:N/I:L/A:N",
              "V3Score": 3.6
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:N/UI:R/S:C/C:N/I:L/A:N",
              "V3Score": 3.6
            }
          },
          "References": [
            "http://www.openwall.com/lists/oss-security/2024/09/03/1",
            "https://access.redhat.com/security/cve/CVE-2024-45310",
            "https://github.com/opencontainers/runc",
            "https://github.com/opencontainers/runc/commit/63c2908164f3a1daea455bf5bcd8d363d70328c7",
            "https://github.com/opencontainers/runc/commit/8781993968fd964ac723ff5f360b6f259e809a3e",
            "https://github.com/opencontainers/runc/commit/f0b652ea61ff6750a8fcc69865d45a7abf37accf",
            "https://github.com/opencontainers/runc/pull/4359",
            "https://github.com/opencontainers/runc/security/advisories/GHSA-jfvp-7x6p-h2pv",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45310",
            "https://security.netapp.com/advisory/ntap-20250221-0008",
            "https://security.netapp.com/advisory/ntap-20250221-0008/",
            "https://www.cve.org/CVERecord?id=CVE-2024-45310",
            "https://www.openwall.com/lists/oss-security/2024/09/03/1"
          ],
          "PublishedDate": "2024-09-03T19:15:15.243Z",
          "LastModifiedDate": "2025-02-21T18:15:17.08Z"
        },
        {
          "VulnerabilityID": "CVE-2024-45337",
          "PkgID": "golang.org/x/crypto@v0.17.0",
          "PkgName": "golang.org/x/crypto",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/crypto@v0.17.0",
            "UID": "a9a35da7d01d9af7"
          },
          "InstalledVersion": "v0.17.0",
          "FixedVersion": "0.31.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-45337",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/crypto/ssh: Misuse of ServerConfig.PublicKeyCallback may cause authorization bypass in golang.org/x/crypto",
          "Description": "Applications and libraries which misuse connection.serverAuthenticate (via callback field ServerConfig.PublicKeyCallback) may be susceptible to an authorization bypass. The documentation for ServerConfig.PublicKeyCallback says that \"A call to this function does not guarantee that the key offered is in fact used to authenticate.\" Specifically, the SSH protocol allows clients to inquire about whether a public key is acceptable before proving control of the corresponding private key. PublicKeyCallback may be called with multiple keys, and the order in which the keys were provided cannot be used to infer which key the client successfully authenticated with, if any. Some applications, which store the key(s) passed to PublicKeyCallback (or derived information) and make security relevant determinations based on it once the connection is established, may make incorrect assumptions. For example, an attacker may send public keys A and B, and then authenticate with A. PublicKeyCallback would be called only twice, first with A and then with B. A vulnerable application may then make authorization decisions based on key B for which the attacker does not actually control the private key. Since this API is widely misused, as a partial mitigation golang.org/x/cry...@v0.31.0 enforces the property that, when successfully authenticating via public key, the last key passed to ServerConfig.PublicKeyCallback will be the key used to authenticate the connection. PublicKeyCallback will now be called multiple times with the same key, if necessary. Note that the client may still not control the last key passed to PublicKeyCallback if the connection is then authenticated with a different method, such as PasswordCallback, KeyboardInteractiveCallback, or NoClientAuth. Users should be using the Extensions field of the Permissions return value from the various authentication callbacks to record data associated with the authentication attempt instead of referencing external state. Once the connection is established the state corresponding to the successful authentication attempt can be retrieved via the ServerConn.Permissions field. Note that some third-party libraries misuse the Permissions type by sharing it across authentication attempts; users of third-party libraries should refer to the relevant projects for guidance.",
          "Severity": "CRITICAL",
          "VendorSeverity": {
            "amazon": 3,
            "azure": 4,
            "cbl-mariner": 4,
            "ghsa": 4,
            "redhat": 3
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:N",
              "V3Score": 9.1
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:C/C:H/I:H/A:N",
              "V3Score": 8.2
            }
          },
          "References": [
            "http://www.openwall.com/lists/oss-security/2024/12/11/2",
            "https://access.redhat.com/security/cve/CVE-2024-45337",
            "https://github.com/golang/crypto",
            "https://github.com/golang/crypto/commit/b4f1988a35dee11ec3e05d6bf3e90b695fbd8909",
            "https://go.dev/cl/635315",
            "https://go.dev/issue/70779",
            "https://groups.google.com/g/golang-announce/c/-nPEi39gI4Q/m/cGVPJCqdAQAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-45337",
            "https://pkg.go.dev/vuln/GO-2024-3321",
            "https://security.netapp.com/advisory/ntap-20250131-0007",
            "https://security.netapp.com/advisory/ntap-20250131-0007/",
            "https://www.cve.org/CVERecord?id=CVE-2024-45337"
          ],
          "PublishedDate": "2024-12-12T02:02:07.97Z",
          "LastModifiedDate": "2025-02-18T21:15:22.187Z"
        },
        {
          "VulnerabilityID": "CVE-2025-22869",
          "PkgID": "golang.org/x/crypto@v0.17.0",
          "PkgName": "golang.org/x/crypto",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/crypto@v0.17.0",
            "UID": "a9a35da7d01d9af7"
          },
          "InstalledVersion": "v0.17.0",
          "FixedVersion": "0.35.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2025-22869",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/crypto/ssh: Denial of Service in the Key Exchange of golang.org/x/crypto/ssh",
          "Description": "SSH servers which implement file transfer protocols are vulnerable to a denial of service attack from clients which complete the key exchange slowly, or not at all, causing pending content to be read into memory, but never transmitted.",
          "Severity": "HIGH",
          "CweIDs": [
            "CWE-770"
          ],
          "VendorSeverity": {
            "alma": 3,
            "amazon": 3,
            "azure": 3,
            "cbl-mariner": 3,
            "ghsa": 3,
            "oracle-oval": 3,
            "redhat": 3
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "https://access.redhat.com/errata/RHSA-2025:3833",
            "https://access.redhat.com/security/cve/CVE-2025-22869",
            "https://bugzilla.redhat.com/2348367",
            "https://errata.almalinux.org/9/ALSA-2025-3833.html",
            "https://github.com/golang/crypto",
            "https://github.com/golang/crypto/commit/7292932d45d55c7199324ab0027cc86e8198aa22",
            "https://go-review.googlesource.com/c/crypto/+/652135",
            "https://go.dev/cl/652135",
            "https://go.dev/issue/71931",
            "https://linux.oracle.com/cve/CVE-2025-22869.html",
            "https://linux.oracle.com/errata/ELSA-2025-7484.html",
            "https://nvd.nist.gov/vuln/detail/CVE-2025-22869",
            "https://pkg.go.dev/vuln/GO-2025-3487",
            "https://security.netapp.com/advisory/ntap-20250411-0010",
            "https://security.netapp.com/advisory/ntap-20250411-0010/",
            "https://www.cve.org/CVERecord?id=CVE-2025-22869"
          ],
          "PublishedDate": "2025-02-26T08:14:24.997Z",
          "LastModifiedDate": "2025-05-01T19:28:20.74Z"
        },
        {
          "VulnerabilityID": "CVE-2023-45288",
          "PkgID": "golang.org/x/net@v0.17.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.17.0",
            "UID": "507a6bc46b9a6b08"
          },
          "InstalledVersion": "v0.17.0",
          "FixedVersion": "0.23.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2023-45288",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang: net/http, x/net/http2: unlimited number of CONTINUATION frames causes DoS",
          "Description": "An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.",
          "Severity": "MEDIUM",
          "VendorSeverity": {
            "alma": 3,
            "amazon": 2,
            "azure": 3,
            "bitnami": 3,
            "cbl-mariner": 3,
            "ghsa": 2,
            "oracle-oval": 3,
            "photon": 3,
            "redhat": 3,
            "rocky": 3,
            "ubuntu": 2
          },
          "CVSS": {
            "bitnami": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
              "V3Score": 5.3
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            }
          },
          "References": [
            "http://www.openwall.com/lists/oss-security/2024/04/03/16",
            "http://www.openwall.com/lists/oss-security/2024/04/05/4",
            "https://access.redhat.com/errata/RHSA-2024:2724",
            "https://access.redhat.com/security/cve/CVE-2023-45288",
            "https://bugzilla.redhat.com/2268017",
            "https://bugzilla.redhat.com/2268018",
            "https://bugzilla.redhat.com/2268019",
            "https://bugzilla.redhat.com/2268273",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2268017",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2268018",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2268019",
            "https://bugzilla.redhat.com/show_bug.cgi?id=2268273",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-45288",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-45289",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-45290",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24783",
            "https://errata.almalinux.org/9/ALSA-2024-2724.html",
            "https://errata.rockylinux.org/RLSA-2024:2724",
            "https://go.dev/cl/576155",
            "https://go.dev/issue/65051",
            "https://groups.google.com/g/golang-announce/c/YgW0sx8mN3M",
            "https://kb.cert.org/vuls/id/421644",
            "https://linux.oracle.com/cve/CVE-2023-45288.html",
            "https://linux.oracle.com/errata/ELSA-2024-3346.html",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QRYFHIQ6XRKRYBI2F5UESH67BJBQXUPT",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/QRYFHIQ6XRKRYBI2F5UESH67BJBQXUPT/",
            "https://nowotarski.info/http2-continuation-flood-technical-details",
            "https://nowotarski.info/http2-continuation-flood/",
            "https://nvd.nist.gov/vuln/detail/CVE-2023-45288",
            "https://pkg.go.dev/vuln/GO-2024-2687",
            "https://security.netapp.com/advisory/ntap-20240419-0009",
            "https://security.netapp.com/advisory/ntap-20240419-0009/",
            "https://ubuntu.com/security/notices/USN-6886-1",
            "https://ubuntu.com/security/notices/USN-7109-1",
            "https://ubuntu.com/security/notices/USN-7111-1",
            "https://www.cve.org/CVERecord?id=CVE-2023-45288",
            "https://www.kb.cert.org/vuls/id/421644"
          ],
          "PublishedDate": "2024-04-04T21:15:16.113Z",
          "LastModifiedDate": "2024-11-21T08:26:42.38Z"
        },
        {
          "VulnerabilityID": "CVE-2025-22870",
          "PkgID": "golang.org/x/net@v0.17.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.17.0",
            "UID": "507a6bc46b9a6b08"
          },
          "InstalledVersion": "v0.17.0",
          "FixedVersion": "0.36.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2025-22870",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/proxy: golang.org/x/net/http/httpproxy: HTTP Proxy bypass using IPv6 Zone IDs in golang.org/x/net",
          "Description": "Matching of hosts against proxy patterns can improperly treat an IPv6 zone ID as a hostname component. For example, when the NO_PROXY environment variable is set to \"*.example.com\", a request to \"[::1%25.example.com]:80` will incorrectly match and not be proxied.",
          "Severity": "MEDIUM",
          "CweIDs": [
            "CWE-115"
          ],
          "VendorSeverity": {
            "amazon": 2,
            "azure": 2,
            "cbl-mariner": 2,
            "ghsa": 2,
            "redhat": 2,
            "ubuntu": 2
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L",
              "V3Score": 4.4
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:L",
              "V3Score": 4.4
            }
          },
          "References": [
            "http://www.openwall.com/lists/oss-security/2025/03/07/2",
            "https://access.redhat.com/security/cve/CVE-2025-22870",
            "https://github.com/golang/go/issues/71984",
            "https://go-review.googlesource.com/q/project:net",
            "https://go.dev/cl/654697",
            "https://go.dev/issue/71984",
            "https://groups.google.com/g/golang-announce/c/4t3lzH3I0eI/m/b42ImqrBAQAJ",
            "https://nvd.nist.gov/vuln/detail/CVE-2025-22870",
            "https://pkg.go.dev/vuln/GO-2025-3503",
            "https://security.netapp.com/advisory/ntap-20250509-0007",
            "https://security.netapp.com/advisory/ntap-20250509-0007/",
            "https://ubuntu.com/security/notices/USN-7574-1",
            "https://www.cve.org/CVERecord?id=CVE-2025-22870"
          ],
          "PublishedDate": "2025-03-12T19:15:38.31Z",
          "LastModifiedDate": "2025-05-09T20:15:38.727Z"
        },
        {
          "VulnerabilityID": "CVE-2025-22872",
          "PkgID": "golang.org/x/net@v0.17.0",
          "PkgName": "golang.org/x/net",
          "PkgIdentifier": {
            "PURL": "pkg:golang/golang.org/x/net@v0.17.0",
            "UID": "507a6bc46b9a6b08"
          },
          "InstalledVersion": "v0.17.0",
          "FixedVersion": "0.38.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2025-22872",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang.org/x/net/html: Incorrect Neutralization of Input During Web Page Generation in x/net in golang.org/x/net",
          "Description": "The tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. \u003cmath\u003e, \u003csvg\u003e, etc contexts).",
          "Severity": "MEDIUM",
          "VendorSeverity": {
            "amazon": 3,
            "azure": 2,
            "cbl-mariner": 2,
            "ghsa": 2,
            "redhat": 2
          },
          "CVSS": {
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:C/C:L/I:L/A:L",
              "V3Score": 6.5
            }
          },
          "References": [
            "https://access.redhat.com/security/cve/CVE-2025-22872",
            "https://github.com/advisories/GHSA-vvgc-356p-c3xw",
            "https://go.dev/cl/662715",
            "https://go.dev/issue/73070",
            "https://groups.google.com/g/golang-announce/c/ezSKR9vqbqA",
            "https://nvd.nist.gov/vuln/detail/CVE-2025-22872",
            "https://pkg.go.dev/vuln/GO-2025-3595",
            "https://security.netapp.com/advisory/ntap-20250516-0007",
            "https://security.netapp.com/advisory/ntap-20250516-0007/",
            "https://www.cve.org/CVERecord?id=CVE-2025-22872"
          ],
          "PublishedDate": "2025-04-16T18:16:04.183Z",
          "LastModifiedDate": "2025-05-16T23:15:19.707Z"
        },
        {
          "VulnerabilityID": "CVE-2024-24786",
          "PkgID": "google.golang.org/protobuf@v1.29.1",
          "PkgName": "google.golang.org/protobuf",
          "PkgIdentifier": {
            "PURL": "pkg:golang/google.golang.org/protobuf@v1.29.1",
            "UID": "bf9b52f72cae224c"
          },
          "InstalledVersion": "v1.29.1",
          "FixedVersion": "1.33.0",
          "Status": "fixed",
          "Layer": {},
          "SeveritySource": "ghsa",
          "PrimaryURL": "https://avd.aquasec.com/nvd/cve-2024-24786",
          "DataSource": {
            "ID": "ghsa",
            "Name": "GitHub Security Advisory Go",
            "URL": "https://github.com/advisories?query=type%3Areviewed+ecosystem%3Ago"
          },
          "Title": "golang-protobuf: encoding/protojson, internal/encoding/json: infinite loop in protojson.Unmarshal when unmarshaling certain forms of invalid JSON",
          "Description": "The protojson.Unmarshal function can enter an infinite loop when unmarshaling certain forms of invalid JSON. This condition can occur when unmarshaling into a message which contains a google.protobuf.Any value, or when the UnmarshalOptions.DiscardUnknown option is set.",
          "Severity": "MEDIUM",
          "VendorSeverity": {
            "alma": 2,
            "amazon": 2,
            "azure": 3,
            "cbl-mariner": 3,
            "ghsa": 2,
            "oracle-oval": 2,
            "redhat": 2,
            "rocky": 2,
            "ubuntu": 2
          },
          "CVSS": {
            "ghsa": {
              "V3Vector": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 7.5
            },
            "redhat": {
              "V3Vector": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:N/A:H",
              "V3Score": 5.9
            }
          },
          "References": [
            "http://www.openwall.com/lists/oss-security/2024/03/08/4",
            "https://access.redhat.com/errata/RHSA-2024:2550",
            "https://access.redhat.com/security/cve/CVE-2024-24786",
            "https://bugzilla.redhat.com/2268046",
            "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24786",
            "https://errata.almalinux.org/9/ALSA-2024-2550.html",
            "https://errata.rockylinux.org/RLSA-2024:2550",
            "https://github.com/protocolbuffers/protobuf-go",
            "https://github.com/protocolbuffers/protobuf-go/commit/f01a588e5810b90996452eec4a28f22a0afae023",
            "https://github.com/protocolbuffers/protobuf-go/releases/tag/v1.33.0",
            "https://go-review.googlesource.com/c/protobuf/+/569356",
            "https://go.dev/cl/569356",
            "https://groups.google.com/g/golang-announce/c/ArQ6CDgtEjY/",
            "https://linux.oracle.com/cve/CVE-2024-24786.html",
            "https://linux.oracle.com/errata/ELSA-2024-4246.html",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JDMBHAVSDU2FBDZ45U3A2VLSM35OJ2HU",
            "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/JDMBHAVSDU2FBDZ45U3A2VLSM35OJ2HU/",
            "https://nvd.nist.gov/vuln/detail/CVE-2024-24786",
            "https://pkg.go.dev/vuln/GO-2024-2611",
            "https://security.netapp.com/advisory/ntap-20240517-0002",
            "https://security.netapp.com/advisory/ntap-20240517-0002/",
            "https://ubuntu.com/security/notices/USN-6746-1",
            "https://ubuntu.com/security/notices/USN-6746-2",
            "https://www.cve.org/CVERecord?id=CVE-2024-24786"
          ],
          "PublishedDate": "2024-03-05T23:15:07.82Z",
          "LastModifiedDate": "2024-11-21T08:59:42.117Z"
        }
      ]
    }
  ]
}
